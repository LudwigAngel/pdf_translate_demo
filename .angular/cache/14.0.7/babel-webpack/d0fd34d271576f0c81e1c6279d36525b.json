{"ast":null,"code":"import { of } from 'rxjs';\nimport { delay } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nexport let TranslatorService = /*#__PURE__*/(() => {\n  class TranslatorService {\n    constructor() {\n      this.apiUrl = 'https://api.mymemory.translated.net/get';\n    }\n\n    translate(text, from, to) {\n      if (!text || text.trim() === '') {\n        return of({\n          translatedText: text\n        });\n      } // Simular llamada a API para evitar problemas de CORS en desarrollo\n\n\n      return this.mockTranslate(text, from, to);\n    }\n\n    mockTranslate(text, from, to) {\n      // Diccionario de traducciones más completo\n      const translations = {\n        'es-en': {\n          'CERTIFICADO SANITARIO DE EXPORTACIÓN': 'HEALTH CERTIFICATE FOR EXPORT',\n          'Expediente N°': 'Dossier N°',\n          'Certificado N°': 'Certificate N°',\n          'Exportador': 'Exporter',\n          'Importador': 'Importer',\n          'Dirección': 'Address',\n          'Medio de transporte': 'Means of Transport',\n          'País de destino': 'Country of destination',\n          'Puesto de Control de Salida': 'Control Point of exit',\n          'Punto de Entrada': 'Point of entry',\n          'Total de mercancías pecuarias': 'Total of livestock goods',\n          'País de Tránsito': 'Transit Country',\n          'Descripción': 'Description',\n          'Especie animal': 'Animal species',\n          'Cantidad': 'Quantity',\n          'Identificación': 'Identification',\n          'Lugar de origen': 'Place of origin',\n          'Raza': 'Breed',\n          'Sexo': 'Sex',\n          'Edad': 'Age',\n          'Se certifica que': 'It is hereby certified that',\n          'Observaciones': 'Observations',\n          'Lugar y Fecha de emisión': 'Place and date of issue',\n          'Firma y sello del Inspector Oficial': 'Official Inspector Signature and Stamp',\n          'El SENASA, sus funcionarios y representantes declinan toda responsabilidad': 'SENASA, its officials and representatives decline all responsibility',\n          'financiera resultante de este Certificado': 'financial resulting from this Certificate',\n          'Aeropuerto Jorge Chávez - Lima': 'Jorge Chavez Airport - Lima',\n          'Lima, 13 de Agosto de 2025': 'Lima, August 13, 2025',\n          'Exportadora S.A.': 'Exporter S.A.',\n          'Importadora Internacional Ltd.': 'International Importer Ltd.',\n          'Av. Principal 123, Lima, Perú': '123 Main Avenue, Lima, Peru',\n          '456 Main Street, New York, USA': '456 Main Street, New York, USA',\n          'Aéreo - Vuelo LA2024': 'Air - Flight LA2024',\n          'Estados Unidos': 'United States',\n          'JFK Airport - New York': 'JFK Airport - New York',\n          'Colombia': 'Colombia',\n          'Bovino': 'Bovine',\n          'Porcino': 'Swine',\n          'Holstein': 'Holstein',\n          'Yorkshire': 'Yorkshire',\n          'Macho': 'Male',\n          'Hembra': 'Female',\n          'meses': 'months',\n          'Perú': 'Peru'\n        },\n        'es-fr': {\n          'CERTIFICADO SANITARIO DE EXPORTACIÓN': 'CERTIFICAT SANITAIRE D\\'EXPORTATION',\n          'Expediente N°': 'Dossier N°',\n          'Certificado N°': 'Certificat N°',\n          'Exportador': 'Exportateur',\n          'Importador': 'Importateur',\n          'Dirección': 'Adresse',\n          'Medio de transporte': 'Moyen de transport',\n          'País de destino': 'Pays de destination',\n          'Puesto de Control de Salida': 'Point de contrôle de sortie',\n          'Punto de Entrada': 'Point d\\'entrée'\n        }\n      };\n      const langPair = `${from}-${to}`;\n      const translation = translations[langPair] && translations[langPair][text] ? translations[langPair][text] : text;\n      return of({\n        translatedText: translation\n      }).pipe(delay(300));\n    } // Método para traducir usando la API real (para cuando se resuelvan problemas de CORS)\n\n\n    translateWithAPI(text, from, to) {\n      const url = `${this.apiUrl}?q=${encodeURIComponent(text)}&langpair=${from}|${to}`; // Aquí iría la llamada HTTP real\n      // return this.http.get(url).pipe(\n      //   map((response: any) => ({\n      //     translatedText: response.responseData.translatedText\n      //   })),\n      //   catchError(error => {\n      //     console.error('Translation error:', error);\n      //     return of({ translatedText: text });\n      //   })\n      // );\n\n      return this.mockTranslate(text, from, to);\n    } // Método para traducir múltiples textos\n\n\n    translateMultiple(texts, from, to) {\n      const translations = {};\n      texts.forEach(text => {\n        this.translate(text, from, to).subscribe(result => {\n          translations[text] = result.translatedText;\n        });\n      });\n      return of(translations).pipe(delay(500));\n    }\n\n  }\n\n  TranslatorService.ɵfac = function TranslatorService_Factory(t) {\n    return new (t || TranslatorService)();\n  };\n\n  TranslatorService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: TranslatorService,\n    factory: TranslatorService.ɵfac,\n    providedIn: 'root'\n  });\n  return TranslatorService;\n})();","map":null,"metadata":{},"sourceType":"module"}